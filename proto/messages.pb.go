// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Phrase struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Phrase) Reset()         { *m = Phrase{} }
func (m *Phrase) String() string { return proto.CompactTextString(m) }
func (*Phrase) ProtoMessage()    {}
func (*Phrase) Descriptor() ([]byte, []int) {
	return fileDescriptor_messages_80ef3e1dacbaf330, []int{0}
}
func (m *Phrase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Phrase.Unmarshal(m, b)
}
func (m *Phrase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Phrase.Marshal(b, m, deterministic)
}
func (dst *Phrase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Phrase.Merge(dst, src)
}
func (m *Phrase) XXX_Size() int {
	return xxx_messageInfo_Phrase.Size(m)
}
func (m *Phrase) XXX_DiscardUnknown() {
	xxx_messageInfo_Phrase.DiscardUnknown(m)
}

var xxx_messageInfo_Phrase proto.InternalMessageInfo

func (m *Phrase) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func init() {
	proto.RegisterType((*Phrase)(nil), "proto.Phrase")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_messages_80ef3e1dacbaf330) }

var fileDescriptor_messages_80ef3e1dacbaf330 = []byte{
	// 75 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x32,
	0x5c, 0x6c, 0x01, 0x19, 0x45, 0x89, 0xc5, 0xa9, 0x42, 0x42, 0x5c, 0x2c, 0xe5, 0xf9, 0x45, 0x29,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0x76, 0x12, 0x1b, 0x58, 0x91, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x01, 0x59, 0x09, 0xf2, 0x3d, 0x00, 0x00, 0x00,
}
